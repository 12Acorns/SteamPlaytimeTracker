// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamPlaytimeTracker;

#nullable disable

namespace SteamPlaytimeTracker.Migrations
{
    [DbContext(typeof(DbAccess))]
    [Migration("20250826215901_CorrectedRelationships3")]
    partial class CorrectedRelationships3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SteamAppId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SteamAppId");

                    b.ToTable("LocalApps");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.Steam.Data.App.SteamApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppId")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "appid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("SteamApps");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.Steam.Data.Playtime.PlaytimeSlice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("SessionLength")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("SessionStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("SteamAppEntryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SteamAppEntryId");

                    b.ToTable("PlaytimeSlices");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.HasOne("SteamPlaytimeTracker.Steam.Data.App.SteamApp", "SteamApp")
                        .WithMany()
                        .HasForeignKey("SteamAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamApp");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.Steam.Data.Playtime.PlaytimeSlice", b =>
                {
                    b.HasOne("SteamPlaytimeTracker.DbObject.SteamAppEntry", "SteamAppEntry")
                        .WithMany("PlaytimeSegments")
                        .HasForeignKey("SteamAppEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamAppEntry");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.Navigation("PlaytimeSegments");
                });
#pragma warning restore 612, 618
        }
    }
}
