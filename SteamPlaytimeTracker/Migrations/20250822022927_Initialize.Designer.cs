// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamPlaytimeTracker;

#nullable disable

namespace SteamPlaytimeTracker.Migrations
{
    [DbContext(typeof(DbAccess))]
    [Migration("20250822022927_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.PlaytimeSliceDTO", b =>
                {
                    b.Property<int>("PlaytimeSliceDTOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SessionTimeTicks")
                        .HasColumnType("INTEGER");

                    b.Property<short>("StartTimeOffsetMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartTimeTicks")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SteamAppEntryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaytimeSliceDTOId");

                    b.HasIndex("SteamAppEntryId");

                    b.ToTable("PlaytimeSliceDTO");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppDTO", b =>
                {
                    b.Property<int>("SteamAppDTOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AppId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SteamAppDTOId");

                    b.ToTable("AllSteamApps");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.Property<int>("SteamAppEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SteamAppDTOId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SteamAppEntryId");

                    b.HasIndex("SteamAppDTOId");

                    b.ToTable("SteamAppEntries");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.PlaytimeSliceDTO", b =>
                {
                    b.HasOne("SteamPlaytimeTracker.DbObject.SteamAppEntry", null)
                        .WithMany("PlaytimeSegments")
                        .HasForeignKey("SteamAppEntryId");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.HasOne("SteamPlaytimeTracker.DbObject.SteamAppDTO", "SteamApp")
                        .WithMany()
                        .HasForeignKey("SteamAppDTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamApp");
                });

            modelBuilder.Entity("SteamPlaytimeTracker.DbObject.SteamAppEntry", b =>
                {
                    b.Navigation("PlaytimeSegments");
                });
#pragma warning restore 612, 618
        }
    }
}
